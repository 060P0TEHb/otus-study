# -*- mode: ruby -*-
# vim: set ft=ruby :
home = ENV['HOME']
ENV["LC_ALL"] = "en_US.UTF-8"

MACHINES = {
  :OtusLVM => {
        :box_name => "centos/7",
        :box_version => "1804.02",
        :disks => {
            :sata1 => {
                :dfile => home + '/VirtualBox VMs/lvm/sata1.vdi',
                :size => 10240,
                :port => 1
            },
            :sata2 => {
                :dfile => home + '/VirtualBox VMs/lvm/sata2.vdi',
                :size => 2048, # Megabytes
                :port => 2
            },
            :sata3 => {
                :dfile => home + '/VirtualBox VMs/lvm/sata3.vdi',
                :size => 1024, # Megabytes
                :port => 3
            },
            :sata4 => {
                :dfile => home + '/VirtualBox VMs/lvm/sata4.vdi',
                :size => 1024,
                :port => 4
            },
            :sata5 => {
                :dfile => home + '/VirtualBox VMs/lvm/sata5.vdi',
                :size => 1024,
                :port => 5
            }
        }
  },
}

Vagrant.configure("2") do |config|

    MACHINES.each do |boxname, boxconfig|
  
        config.vm.define boxname do |box|
  
            box.vm.box = boxconfig[:box_name]
            box.vm.box_version = boxconfig[:box_version]
            box.vm.host_name = boxname.to_s
  
            #box.vm.network "forwarded_port", guest: 3260, host: 3260+offset
  
            box.vm.provider :virtualbox do |vb|

                    vb.name = boxname.to_s

                    vb.customize ["modifyvm", :id, "--memory", "2048", "--cpus", "2"]
                    needsController = false

                    boxconfig[:disks].each do |dname, dconf|
                        unless File.exist?(dconf[:dfile])
                             vb.customize ['createhd', '--filename', dconf[:dfile], '--variant', 'Fixed', '--size', dconf[:size]]
                             needsController =  true
                        end
                    end
                    if needsController == true
                       vb.customize ["storagectl", :id, "--name", "SATA", "--add", "sata" ]
                       boxconfig[:disks].each do |dname, dconf|
                           vb.customize ['storageattach', :id,  '--storagectl', 'SATA', '--port', dconf[:port], '--device', 0, '--type', 'hdd', '--medium', dconf[:dfile]]
                       end
                    end
            end
        box.vm.provision "shell", inline: <<-SHELL
            sed -i '0,/#PermitRootLogin/s//PermitRootLogin/' /etc/ssh/sshd_config
            mkdir -p ~root/.ssh
            cp ~vagrant/.ssh/auth* ~root/.ssh
            systemctl restart sshd
          SHELL
        end
    end
  end
  
